<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_anbib_survey.QuickSurveyUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>QuickSurveyUtils</name>
        <script><![CDATA[var QuickSurveyUtils = Class.create();
QuickSurveyUtils.prototype = {
	initialize: function() {

	},

	helper: new QuickSurveyHelper(),

	logs: new global.LogGenerator("itsm", "[GLOBAL] - QuickSurveyUtils"),

	getQuickSurveyUrl: function (record, configId) {
		try{
			var response = this.helper.getQuickSurveyUrl(record, configId);
			return response;
		} catch(ex){
			this.logs.addInfo(ex, "[getQuickSurveyUrl] ERROR");
			this.logs.execute();
		}
	},

	configRecordSanityCheck: function (currentGr) {
		try{
			var response = this.helper.configRecordSanityCheck(currentGr);
			return response;
		} catch(ex){
			this.logs.addInfo(ex, "[configRecordSanityCheck] ERROR");
			this.logs.execute();
		}
	},

	initSurveyConfig: function (surveyId, configId) {
		try{
			var response = this.helper.initSurveyConfig(surveyId, configId);
			return response;
		} catch(ex){
			this.logs.addInfo(ex, "[initSurveyConfig] ERROR");
			this.logs.execute();
		}
	},
	
	saveData: function(surveyId,configId,comment,reasonChoices){
		try{
			var response = this.helper.saveData(surveyId,configId,comment,reasonChoices);
			return response;
		} catch(ex){
			this.logs.addInfo(ex, "[saveData] ERROR");
			this.logs.execute();
		}
	},
	
	saveSurveyInstance: function (surveyId, valueObj) {
		try{
			var response = this.helper.saveSurveyInstance(surveyId, valueObj);
			return response;
		} catch(ex){
			this.logs.addInfo(ex, "[saveSurveyInstance] ERROR");
			this.logs.execute();
		}
	},

	reopenSurveyInstance: function (surveyId) {
		try{
			var response = this.helper.reopenSurveyInstance(surveyId);
			return response;
		} catch(ex){
			this.logs.addInfo(ex, "[reopenSurveyInstance] ERROR");
			this.logs.execute();
		}
	},



	type: 'QuickSurveyUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>lucas.simoes@alparservice.com.br</sys_created_by>
        <sys_created_on>2020-08-20 20:32:50</sys_created_on>
        <sys_id>b8849534db7e1490faa711494b9619c8</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>QuickSurveyUtils</sys_name>
        <sys_package display_value="Quick Survey" source="x_anbib_survey">c2024b8cdb72149002085bd05b9619a8</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Quick Survey">c2024b8cdb72149002085bd05b9619a8</sys_scope>
        <sys_update_name>sys_script_include_b8849534db7e1490faa711494b9619c8</sys_update_name>
        <sys_updated_by>pedro.torres@alparservice.com.br</sys_updated_by>
        <sys_updated_on>2021-03-10 14:02:04</sys_updated_on>
    </sys_script_include>
</record_update>
